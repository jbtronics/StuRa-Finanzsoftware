security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|trans)|css|images|js)/
            security: false
        main:
            lazy: true
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: admin_dashboard
                use_referer: true

            entry_point: form_login

            logout:
                path: app_logout
                target: homepage

            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_VIEW_AUDITS: [ROLE_ADMIN]
        ROLE_EDIT_USER: [ROLE_ADMIN, ROLE_READ_USER]
        ROLE_EDIT_ORGANISATIONS: [ROLE_ADMIN, ROLE_READ_BANK_ACCOUNTS, ROLE_READ_ORGANISATIONS]
        ROLE_SHOW_PAYMENT_ORDERS: [ROLE_ADMIN, ROLE_READ_BANK_ACCOUNTS, ROLE_READ_ORGANISATIONS]
        ROLE_EDIT_PAYMENT_ORDERS: [ROLE_SHOW_PAYMENT_ORDERS, ROLE_EXPORT_PAYMENT_ORDERS]
        ROLE_EXPORT_REFERENCES: [ROLE_EXPORT_PAYMENT_ORDERS_REFERENCES, ROLE_SHOW_PAYMENT_ORDERS]
        ROLE_PO_FACTUALLY: ROLE_EDIT_PAYMENT_ORDERS
        ROLE_PO_MATHEMATICALLY: ROLE_EDIT_PAYMENT_ORDERS
        ROLE_EDIT_BANK_ACCOUNTS: ROLE_ADMIN
        ROLE_MANUAL_CONFIRMATION: ROLE_ADMIN

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # This makes the logout route accessible during two-factor authentication. Allows the user to
        # cancel two-factor authentication, if they need to.
        - { path: ^/logout, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # This ensures that the form can only be accessed when two-factor authentication is in progress.
        - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }


        - { path: ^/((de|en)/)*admin, roles: ROLE_ADMIN }
        - { path: ^/((de|en)/)*/admin/audit, roles: ROLE_VIEW_AUDITS}
        - { path: ^/((de|en)/)*/admin/user/settings, roles: ROLE_USER }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
