<?php
/*
 * Copyright (C) 2020  Jan BÃ¶hmer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

namespace App\Tests\Helpers\SEPAXML;

use App\Helpers\SEPAXML\SEPAXMLParser;
use PHPUnit\Framework\TestCase;

class SEPAXMLParserTest extends TestCase
{
    private $data_dir;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->data_dir = realpath(__DIR__.'/../../data/sepa-xml');
    }

    public function parseDataProvider()
    {
        yield [
            [
                'msg_id' => 'StuRa Export 5fedbbad3339a',
                'number_of_payments' => 1,
                'total_sum' => 10,
                'initiator_iban' => 'DE84660501010000129995',
                'initiator_bic' => 'KARSDE66XXX'
            ],
            'export_auto_bank_account_2.xml'
        ];

        yield [
            [
                'msg_id' => 'StuRa Export 5fed0a4111595',
                'number_of_payments' => 3,
                'total_sum' => 12473,
                'initiator_iban' => 'DE97660501010000123456',
                'initiator_bic' => 'KARSDE66XXX'
            ],
            'export_manual_multiple_payments.xml'
        ];
    }

    /**
     * @dataProvider parseDataProvider
     * @param  array  $expected
     * @param  string  $filename
     * @return void
     */
    public function testParseFromFile(array $expected, string $filename)
    {
        $file = new \SplFileInfo($this->data_dir . '/' . $filename);

        self::assertEquals($expected, SEPAXMLParser::parseFromFile($file));
    }
}
